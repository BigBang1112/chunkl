CGameCtnChallenge 0x03043000 // A map
- chunk_Chunk03043017: Unexpected syntax (args.Count != 1 or 2)
- chunk_Chunk03043026: Unexpected syntax (clipGlobal)
- chunk_Chunk03043027: Unexpected if statement syntax
- chunk_Chunk03043029: Unexpected syntax
- chunk_Chunk0304302D: Unexpected syntax
- chunk_Chunk03043042: Unexpected syntax (authorLogin is not [valid] field)
- chunk_Chunk03043049: Unexpected syntax (triggerSize)
- chunk_Chunk03043050: Unexpected syntax (triggerSize)
- chunk_Chunk03043059: Unexpected if statement syntax

0x002 (header, struct: SHeaderTMDesc) // map info
 versionb
 v2-
  ident MapInfo
  string MapName
 bool
 v1+
  timeint BronzeTime
  timeint SilverTime
  timeint GoldTime
  timeint AuthorTime
  v3=
   byte
  v4+
   int Cost
   v5+
    bool IsLapRace
    v6=
     bool IsMultilap
    v7+
     int<PlayMode> Mode
     v9+
      int
      v10+
       int AuthorScore
       v11+
        int<EditorMode> Editor
        v12+
         int
         v13+
          int NbCheckpoints
          int NbLaps

0x003 (header, struct: SHeaderCommon) // common
 versionb
 ident MapInfo
 string MapName
 byte<MapKind> KindInHeader
 v1+
  uint
  string Password
  v2+
   ident Decoration
   v3+
    vec2 MapCoordOrigin
    v4+
     vec2 MapCoordTarget
     v5+
      data[16]
      v6+
       string MapType
       string MapStyle
       v8-
        int
       v8+
        ulong LightmapCacheUid
        v9+
         byte LightmapVersion
         v11+
          id TitleId

0x004 (header, struct: SHeaderVersion) // version
 version

0x005 (header, struct: SHeaderCommunity) // xml
 string Xml

0x007 (header, struct: SHeaderThumbnail) // thumbnail

0x008 (header, struct: SHeaderAuthorInfo) // author info
 version
 int AuthorVersion
 string AuthorLogin
 string AuthorNickname
 string AuthorZone
 string AuthorExtraInfo

0x00D // vehicle
 ident PlayerModel

0x00F // TM1.0 block data
 ident MapInfo
 int3 Size
 list_deprec<CGameCtnBlock> Blocks
 bool NeedUnlock
 ident Decoration

0x011 // parameters
 CGameCtnCollectorList BlockStock
 CGameCtnChallengeParameters ChallengeParameters
 int<MapKind> Kind

0x012 // TM1.0 map name
 string MapName

0x013 // legacy block data

0x014 (skippable) // legacy password
 bool
 string Password

0x016 (skippable)
 int

0x017 (skippable) // checkpoints
 int3[] Checkpoints

0x018 (skippable) // laps
 bool TMObjective_IsLapRace
 int TMObjective_NbLaps

0x019 (skippable) // mod
 fileref ModPackDesc

0x01A
 CMwNod? // assert: '!ReplayRecord || !ReplayRecord->m_Challenge' failed.

0x01B // OldIgs
 int U01
 if U01 > 0
  throw NotSupportedException("SOldIgs count > 0")

0x01C (skippable) // play mode
 int<PlayMode> Mode

0x01D
 CMwNod? // assert: '!ReplayRecord || !ReplayRecord->m_Challenge' failed.

0x01F // block data

0x020 // legacy legacy mediatracker
 CGameCtnMediaClip? ClipIntro
 CMwNod?
 CMwNod?
 CGameCtnMediaClipGroup? ClipGroupInGame
 CGameCtnMediaClipGroup? ClipGroupEndRace

0x021 // legacy mediatracker
 CGameCtnMediaClip? ClipIntro
 CGameCtnMediaClipGroup? ClipGroupInGame
 CGameCtnMediaClipGroup? ClipGroupEndRace

0x022
 int // = 1

0x023 // map origin
 vec2 MapCoordOrigin
 MapCoordTarget = MapCoordOrigin

0x024 // music
 fileref CustomMusicPackDesc

0x025 // map origin and target
 vec2 MapCoordOrigin
 vec2 MapCoordTarget

0x026 // clip global
 CMwNod?

0x027 // old realtime thumbnail
 bool HasCustomCamThumbnail
 if !HasCustomCamThumbnail
  return
 byte
 vec3 // Iso4 technically
 vec3 // camera calibration matrix?
 vec3
 vec3 ThumbnailPosition
 float ThumbnailFov
 float ThumbnailNearClipPlane
 float ThumbnailFarClipPlane

0x028 (base: 0x027) // old realtime thumbnail + comments
 base
 string? Comments

0x029 (skippable) // password
 data[16] HashedPassword
 uint CRC32

0x02A
 bool // code hints to something with locking (NeedUnlock?)

0x02D (skippable) // realtime thumbnail + comments

0x034 (skippable)
 data

0x036 (skippable, base: 0x02D) // realtime thumbnail + comments

0x038 (skippable, ignore)

0x03A (skippable, ignore)

0x03D (skippable) // lightmaps

0x03E (skippable) // CarMarksBuffer
 version
 v1+
  throw
 CSceneVehicleCarMarksSamples[]_deprec CarMarksBuffer

0x040 (skippable) // items

0x041 (skippable, ignore)

0x042 (skippable) // author
 version // = 1
 int AuthorVersion
 string AuthorLogin
 string AuthorNickname
 string AuthorZone
 string AuthorExtraInfo

0x043 (skippable) // genealogies

0x044 (skippable) // metadata

0x047 (skippable)
 version
 string?
 v1+
  throw

0x048 (skippable) // baked blocks

0x049 (skippable) // mediatracker
 version
 CGameCtnMediaClip? ClipIntro
 CGameCtnMediaClip? ClipPodium
 CGameCtnMediaClipGroup? ClipGroupInGame
 CGameCtnMediaClipGroup? ClipGroupEndRace
 v2+
  CGameCtnMediaClip? ClipAmbiance
 v1+
  int3 TriggerSize

0x04B (skippable) // objectives
 string? ObjectiveTextAuthor
 string? ObjectiveTextGold
 string? ObjectiveTextSilver
 string? ObjectiveTextBronze

0x04D (skippable, ignore)

0x04E (skippable, ignore)

0x04F (skippable, ignore)

0x050 (skippable) // offzones

0x051 (skippable) // title info
 version
 id TitleId
 string BuildVersion

0x052 (skippable) // deco height
 version
 int DecoBaseHeightOffset

0x053 (skippable) // bot paths
 version
 list<BotPath> BotPaths

0x054 (skippable) // embedded objects

0x055 (skippable, ignore)

0x056 (skippable) // light settings
 version
 int
 timeofday DayTime
 int
 bool DynamicDaylight
 timeint? DayDuration

0x057 (skippable, ignore)

0x058 (skippable) // SubMapsInfos
 version
 int U01
 if U01 > 0
  throw

0x059 (skippable)

0x05A (skippable)
 int
 int

0x05B (skippable) // lightmaps

0x05C (skippable, ignore)

0x05D (skippable, ignore)

0x05E (skippable, ignore)

0x05F (skippable) // free blocks

0x060 (skippable, ignore)

0x061 (skippable, ignore)

0x062 (skippable) // MapElemColor

0x063 (skippable) // AnimPhaseOffset

0x064 (skippable, ignore)

0x065 (skippable) // foreground pack desc

0x067 (skippable, ignore)

0x068 (skippable) // MapElemLmQuality

0x069 (skippable) // macroblock instances

0x06B (skippable) // light settings 2